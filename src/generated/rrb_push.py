#!/usr/bin/env python

# Copyright (c) 2013 Jean Niklas L'orange. All rights reserved.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
# DEALINGS IN THE SOFTWARE.

import sys

def max_height(bits, total_bits):
    '''Returns maximal height of the rrb-vector'''
    i = 1
    bit_count = bits
    while total_bits > bit_count:
        i += 1
        bit_count += bits
    return i

header = """// Autogenerated
const RRB* rrb_push(const RRB *restrict rrb, const void *restrict elt) {
  RRB *new_rrb = rrb_head_clone(rrb);
  // TODO: rrb_empty is an odd one. Need to fix it?
  InternalNode **previous_pointer = (InternalNode **) &new_rrb->root;
  InternalNode *current = (InternalNode *) rrb->root;
  LeafNode *leaf;
  uint32_t index = rrb->cnt;
  uint32_t child_index;
  switch (rrb->shift) {
  case 1 (RRB_BITS * N):
    current = internal_node_clone(current);
    *previous_pointer = current;
    if (current->size_table == NULL) {
      child_index = (index >> (RRB_BITS * (N-1))) & RRB_MASK;
    }
    else {
      child_index = sized_pos(current, &index, RRB_BITS * (N-1));
    }
    previous_pointer = &current->child[child_index];
    current = current->child[child_index];
"""

if __name__ == '__main__':
    rrb_bits = int(sys.argv[1])
    
    print '/* I\'ll place the generated code here, trust me! */'
